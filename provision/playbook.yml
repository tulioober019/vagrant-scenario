# -- Add epel repository on every server -- #
- name: Add epel repository on every server.
  hosts: all
  become: True
  become_user: root
  tasks:
    - name: Add EPEL Repository.
      ansible.builtin.dnf:
        update_cache: true
        name: epel-release
        state: present

# -- Installing dependencies on each server -- #

# * Install dependencies on server1 * #
- name: Setup dependencies on server1.
  hosts: server1
  become: True
  become_user: root
  vars:
    packages:
      - nginx
      - php
      - php-cli
      - php-common
      - php-mysqlnd
      - php-ldap
      - postfix
      - dovecot
      - cockpit
    services:
      - nginx.service
      - postfix.service
      - dovecot.service
      - cockpit.socket
  tasks:
    - name: Install packages.
      dnf:
        update_cache: True
        name: "{{ packages }}"
        state: present
      notify: Start services.
  handlers:
    - name: Start services.
      systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"

# * Install dependencies on server2. * #
- name: Setup dependencies on server2.
  hosts: server2
  become: True
  become_user: root
  vars:
    packages:
      - bind 
      - bind-utils
      - cockpit
    services:
      - named.service
      - cockpit.socket
  tasks:
    - name: Install packages.
      dnf:
        update_cache: True
        name: "{{ packages }}"
        state: present
      notify: Start services.
  handlers:
    - name: Start services.
      systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"

# * Install dependencies on server3. * #
- name: Setup dependencies on server3.
  hosts: server3
  become: True
  become_user: root
  vars:
    packages:
      - 389-ds-base
      - mariadb-server
      - cockpit
      - cockpit-389-ds
    services:
      - mariadb.service
      - cockpit.socket
  tasks:
    - name: Enable repository.
      community.general.copr:
        name: "@389ds/389-directory-server"
        state: enabled
    - name: Install packages.
      dnf:
        update_cache: True
        name: "{{ packages }}"
        state: present
      notify: Start services.
  handlers:
    - name: Start services.
      systemd:
        name: "{{ item }}"
        state: started
        enabled: true
      loop: "{{ services }}"
